//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductManagementClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/ProductManagementService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityAtGodownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityAtShopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductPrice {
            get {
                return this.ProductPriceField;
            }
            set {
                if ((this.ProductPriceField.Equals(value) != true)) {
                    this.ProductPriceField = value;
                    this.RaisePropertyChanged("ProductPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityAtGodown {
            get {
                return this.QuantityAtGodownField;
            }
            set {
                if ((this.QuantityAtGodownField.Equals(value) != true)) {
                    this.QuantityAtGodownField = value;
                    this.RaisePropertyChanged("QuantityAtGodown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantityAtShop {
            get {
                return this.QuantityAtShopField;
            }
            set {
                if ((this.QuantityAtShopField.Equals(value) != true)) {
                    this.QuantityAtShopField = value;
                    this.RaisePropertyChanged("QuantityAtShop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalQuantity {
            get {
                return this.TotalQuantityField;
            }
            set {
                if ((this.TotalQuantityField.Equals(value) != true)) {
                    this.TotalQuantityField = value;
                    this.RaisePropertyChanged("TotalQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bill", Namespace="http://schemas.datacontract.org/2004/07/ProductManagementService")]
    [System.SerializableAttribute()]
    public partial class Bill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BillDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductManagementClient.ServiceReference1.Product[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalProductsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BillDate {
            get {
                return this.BillDateField;
            }
            set {
                if ((this.BillDateField.Equals(value) != true)) {
                    this.BillDateField = value;
                    this.RaisePropertyChanged("BillDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillId {
            get {
                return this.BillIdField;
            }
            set {
                if ((this.BillIdField.Equals(value) != true)) {
                    this.BillIdField = value;
                    this.RaisePropertyChanged("BillId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMethod {
            get {
                return this.PaymentMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentMethodField, value) != true)) {
                    this.PaymentMethodField = value;
                    this.RaisePropertyChanged("PaymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductManagementClient.ServiceReference1.Product[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityField, value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItems {
            get {
                return this.TotalItemsField;
            }
            set {
                if ((this.TotalItemsField.Equals(value) != true)) {
                    this.TotalItemsField = value;
                    this.RaisePropertyChanged("TotalItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalProducts {
            get {
                return this.TotalProductsField;
            }
            set {
                if ((this.TotalProductsField.Equals(value) != true)) {
                    this.TotalProductsField = value;
                    this.RaisePropertyChanged("TotalProducts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductSales", Namespace="http://schemas.datacontract.org/2004/07/ProductManagementService")]
    [System.SerializableAttribute()]
    public partial class ProductSales : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantitySoldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuantitySold {
            get {
                return this.QuantitySoldField;
            }
            set {
                if ((this.QuantitySoldField.Equals(value) != true)) {
                    this.QuantitySoldField = value;
                    this.RaisePropertyChanged("QuantitySold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        int AddProduct(ProductManagementClient.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(ProductManagementClient.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProduct", ReplyAction="http://tempuri.org/IProductService/GetAllProductResponse")]
        ProductManagementClient.ServiceReference1.Product[] GetAllProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProduct", ReplyAction="http://tempuri.org/IProductService/GetAllProductResponse")]
        System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.Product[]> GetAllProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductName", ReplyAction="http://tempuri.org/IProductService/UpdateProductNameResponse")]
        void UpdateProductName(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductName", ReplyAction="http://tempuri.org/IProductService/UpdateProductNameResponse")]
        System.Threading.Tasks.Task UpdateProductNameAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductPrice", ReplyAction="http://tempuri.org/IProductService/UpdateProductPriceResponse")]
        void UpdateProductPrice(int id, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductPrice", ReplyAction="http://tempuri.org/IProductService/UpdateProductPriceResponse")]
        System.Threading.Tasks.Task UpdateProductPriceAsync(int id, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductTotalQuantity", ReplyAction="http://tempuri.org/IProductService/UpdateProductTotalQuantityResponse")]
        void UpdateProductTotalQuantity(int id, int tq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductTotalQuantity", ReplyAction="http://tempuri.org/IProductService/UpdateProductTotalQuantityResponse")]
        System.Threading.Tasks.Task UpdateProductTotalQuantityAsync(int id, int tq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductQuantityAtShop", ReplyAction="http://tempuri.org/IProductService/UpdateProductQuantityAtShopResponse")]
        void UpdateProductQuantityAtShop(int id, int qas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductQuantityAtShop", ReplyAction="http://tempuri.org/IProductService/UpdateProductQuantityAtShopResponse")]
        System.Threading.Tasks.Task UpdateProductQuantityAtShopAsync(int id, int qas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductQuantityAtGodown", ReplyAction="http://tempuri.org/IProductService/UpdateProductQuantityAtGodownResponse")]
        void UpdateProductQuantityAtGodown(int id, int qag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductQuantityAtGodown", ReplyAction="http://tempuri.org/IProductService/UpdateProductQuantityAtGodownResponse")]
        System.Threading.Tasks.Task UpdateProductQuantityAtGodownAsync(int id, int qag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductDescription", ReplyAction="http://tempuri.org/IProductService/UpdateProductDescriptionResponse")]
        void UpdateProductDescription(int id, string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProductDescription", ReplyAction="http://tempuri.org/IProductService/UpdateProductDescriptionResponse")]
        System.Threading.Tasks.Task UpdateProductDescriptionAsync(int id, string des);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductOutOfStock", ReplyAction="http://tempuri.org/IProductService/GetProductOutOfStockResponse")]
        ProductManagementClient.ServiceReference1.Product[] GetProductOutOfStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductOutOfStock", ReplyAction="http://tempuri.org/IProductService/GetProductOutOfStockResponse")]
        System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.Product[]> GetProductOutOfStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductInStock", ReplyAction="http://tempuri.org/IProductService/GetProductInStockResponse")]
        ProductManagementClient.ServiceReference1.Product[] GetProductInStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductInStock", ReplyAction="http://tempuri.org/IProductService/GetProductInStockResponse")]
        System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.Product[]> GetProductInStockAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddBill", ReplyAction="http://tempuri.org/IProductService/AddBillResponse")]
        int AddBill(ProductManagementClient.ServiceReference1.Bill bill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddBill", ReplyAction="http://tempuri.org/IProductService/AddBillResponse")]
        System.Threading.Tasks.Task<int> AddBillAsync(ProductManagementClient.ServiceReference1.Bill bill);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetLastWeekSales", ReplyAction="http://tempuri.org/IProductService/GetLastWeekSalesResponse")]
        ProductManagementClient.ServiceReference1.ProductSales[] GetLastWeekSales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetLastWeekSales", ReplyAction="http://tempuri.org/IProductService/GetLastWeekSalesResponse")]
        System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.ProductSales[]> GetLastWeekSalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetLastMonthSales", ReplyAction="http://tempuri.org/IProductService/GetLastMonthSalesResponse")]
        ProductManagementClient.ServiceReference1.ProductSales[] GetLastMonthSales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetLastMonthSales", ReplyAction="http://tempuri.org/IProductService/GetLastMonthSalesResponse")]
        System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.ProductSales[]> GetLastMonthSalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetLastYearSales", ReplyAction="http://tempuri.org/IProductService/GetLastYearSalesResponse")]
        ProductManagementClient.ServiceReference1.ProductSales[] GetLastYearSales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetLastYearSales", ReplyAction="http://tempuri.org/IProductService/GetLastYearSalesResponse")]
        System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.ProductSales[]> GetLastYearSalesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : ProductManagementClient.ServiceReference1.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<ProductManagementClient.ServiceReference1.IProductService>, ProductManagementClient.ServiceReference1.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddProduct(ProductManagementClient.ServiceReference1.Product product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(ProductManagementClient.ServiceReference1.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public ProductManagementClient.ServiceReference1.Product[] GetAllProduct() {
            return base.Channel.GetAllProduct();
        }
        
        public System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.Product[]> GetAllProductAsync() {
            return base.Channel.GetAllProductAsync();
        }
        
        public void UpdateProductName(int id, string name) {
            base.Channel.UpdateProductName(id, name);
        }
        
        public System.Threading.Tasks.Task UpdateProductNameAsync(int id, string name) {
            return base.Channel.UpdateProductNameAsync(id, name);
        }
        
        public void UpdateProductPrice(int id, int price) {
            base.Channel.UpdateProductPrice(id, price);
        }
        
        public System.Threading.Tasks.Task UpdateProductPriceAsync(int id, int price) {
            return base.Channel.UpdateProductPriceAsync(id, price);
        }
        
        public void UpdateProductTotalQuantity(int id, int tq) {
            base.Channel.UpdateProductTotalQuantity(id, tq);
        }
        
        public System.Threading.Tasks.Task UpdateProductTotalQuantityAsync(int id, int tq) {
            return base.Channel.UpdateProductTotalQuantityAsync(id, tq);
        }
        
        public void UpdateProductQuantityAtShop(int id, int qas) {
            base.Channel.UpdateProductQuantityAtShop(id, qas);
        }
        
        public System.Threading.Tasks.Task UpdateProductQuantityAtShopAsync(int id, int qas) {
            return base.Channel.UpdateProductQuantityAtShopAsync(id, qas);
        }
        
        public void UpdateProductQuantityAtGodown(int id, int qag) {
            base.Channel.UpdateProductQuantityAtGodown(id, qag);
        }
        
        public System.Threading.Tasks.Task UpdateProductQuantityAtGodownAsync(int id, int qag) {
            return base.Channel.UpdateProductQuantityAtGodownAsync(id, qag);
        }
        
        public void UpdateProductDescription(int id, string des) {
            base.Channel.UpdateProductDescription(id, des);
        }
        
        public System.Threading.Tasks.Task UpdateProductDescriptionAsync(int id, string des) {
            return base.Channel.UpdateProductDescriptionAsync(id, des);
        }
        
        public ProductManagementClient.ServiceReference1.Product[] GetProductOutOfStock() {
            return base.Channel.GetProductOutOfStock();
        }
        
        public System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.Product[]> GetProductOutOfStockAsync() {
            return base.Channel.GetProductOutOfStockAsync();
        }
        
        public ProductManagementClient.ServiceReference1.Product[] GetProductInStock() {
            return base.Channel.GetProductInStock();
        }
        
        public System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.Product[]> GetProductInStockAsync() {
            return base.Channel.GetProductInStockAsync();
        }
        
        public int AddBill(ProductManagementClient.ServiceReference1.Bill bill) {
            return base.Channel.AddBill(bill);
        }
        
        public System.Threading.Tasks.Task<int> AddBillAsync(ProductManagementClient.ServiceReference1.Bill bill) {
            return base.Channel.AddBillAsync(bill);
        }
        
        public ProductManagementClient.ServiceReference1.ProductSales[] GetLastWeekSales() {
            return base.Channel.GetLastWeekSales();
        }
        
        public System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.ProductSales[]> GetLastWeekSalesAsync() {
            return base.Channel.GetLastWeekSalesAsync();
        }
        
        public ProductManagementClient.ServiceReference1.ProductSales[] GetLastMonthSales() {
            return base.Channel.GetLastMonthSales();
        }
        
        public System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.ProductSales[]> GetLastMonthSalesAsync() {
            return base.Channel.GetLastMonthSalesAsync();
        }
        
        public ProductManagementClient.ServiceReference1.ProductSales[] GetLastYearSales() {
            return base.Channel.GetLastYearSales();
        }
        
        public System.Threading.Tasks.Task<ProductManagementClient.ServiceReference1.ProductSales[]> GetLastYearSalesAsync() {
            return base.Channel.GetLastYearSalesAsync();
        }
    }
}
